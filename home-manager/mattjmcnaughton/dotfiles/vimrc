syntax enable " enable syntax highlighting

set nocompatible " don't bother w/ vi compat.
set nobackup " don't create backup files
set autoindent
set autoread " reload files when changed on disk, i.e. via `git checkout`
set backspace=2 " fix broken backspace in some systems
set clipboard=unnamed " yank and paste w/ the system clipboard
set encoding=utf-8
set expandtab " expand tabs to spaces
set ignorecase " case-insensitive search
set incsearch " search as you type
set laststatus=2 " always show status line
set list " show trailing whitespace
set listchars=tab:▸\ ,trail:▫ " characters to use for whitespace (except for a normal space)
set number " show line numbers
set ruler " show where you are
set scrolloff=3 " show context above/below cursorline
set smartcase " case-sensitive search if any caps
set softtabstop=2 " insert mode tab and backspace use 2 spaces
set tabstop=8 " actual tabs occupy 8 characters
set shiftwidth=2 " normal mode indentation commands use 2 spaces
set wildmenu " show a navigable menu for tab completion
set wildmode=longest,list,full

" keyboard shortcuts
let mapleader = ','

" built-in Vim file explorer shortcuts
nnoremap <leader>d :Explore<CR>

" vim-fzf shortcuts
nnoremap <leader>a :Rg<space>
nnoremap <leader>t :Files<CR>
nnoremap <leader>l :Lines<CR>
nnoremap <leader>b :Buffers<CR>
nnoremap <leader>h :History<CR>

" Formatting shortcuts
nnoremap <leader><space> :call whitespace#strip_trailing()<CR>

" Escape parens, brakcets, quotes... w/ ctrl-k
inoremap <C-k> <Esc>/[)}"'\]>]<CR>:nohl<CR>a

" Automatically close parens, brackets, ...
inoremap {      {}<Left>
inoremap {<CR>  {<CR>}<Esc>O
inoremap {{     {
inoremap {}     {}

inoremap (      ()<Left>
inoremap (<CR>  (<CR>)<Esc>O
inoremap ((     (
inoremap ()     ()

inoremap [      []<Left>
inoremap [<CR>  [<CR>]<Esc>O
inoremap [[     [
inoremap []     []

" automatically rebalance windows on vim resize
autocmd VimResized * :wincmd =

" Fix Cursor in TMUX
if exists('$TMUX')
  let &t_SI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=1\x7\<Esc>\\"
  let &t_EI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=0\x7\<Esc>\\"
else
  let &t_SI = "\<Esc>]50;CursorShape=1\x7"
  let &t_EI = "\<Esc>]50;CursorShape=0\x7"
endif

" Don't copy the contents of an overwritten selection.
vnoremap p "_dP

" Set textwidth at 80
set textwidth=80
set tabstop=2

" File type configuration
autocmd Filetype gitcommit setlocal spell textwidth=72
" TODO: Add further per-file config as necessary.
